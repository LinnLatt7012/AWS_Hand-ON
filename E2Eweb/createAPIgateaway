#!/bin/bash

# Configuration Variables
API_NAME="PowerOfMathApi"                 # The name of the API Gateway
STAGE_NAME="dev"
LAMBDA_FUNCTION_NAME="PowerOfMathFunction"  # The name of your Lambda function
METHOD="POST"
REGION="eu-north-1"  # Get the configured AWS region
ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)

# Create the API Gateway
echo "Creating API Gateway with name '$API_NAME'..."
API_ID=$(aws apigateway get-rest-apis --query "items[?name=='$API_NAME'].id" --output text)

if [ -z "$API_ID" ]; then
echo "Creating API '$API_NAME'..."
    # Proceed to create the API
    API_ID=$(aws apigateway create-rest-api --name "$API_NAME" --endpoint-configuration "types=REGIONAL" --query "id" --output text)
    echo "API '$API_NAME' already exists with ID: $API_ID. Skipping creation."
else
    echo "API '$API_NAME' already exists with ID: $API_ID. Skipping creation."
fi


# Get the Root Resource ID
echo "Getting the root resource ID for the API..."
ROOT_RESOURCE_ID=$(aws apigateway get-resources --rest-api-id $API_ID --query 'items[?path==`/`].id' --output text)

if [ -z "$ROOT_RESOURCE_ID" ]; then
    echo "Error: Failed to retrieve root resource ID."
    exit 1
else
    echo "Root resource ID: $ROOT_RESOURCE_ID"
fi

# Add the POST method to the root resource
echo "Adding $METHOD method to the root resource '/'..."
aws apigateway put-method --rest-api-id $API_ID --resource-id $ROOT_RESOURCE_ID --http-method $METHOD --authorization-type "NONE" --output json >/dev/null

# Integrate the POST method with Lambda
echo "Integrating $METHOD method with Lambda function '$LAMBDA_FUNCTION_NAME'..."
LAMBDA_ARN=$(aws lambda get-function --function-name $LAMBDA_FUNCTION_NAME --query 'Configuration.FunctionArn' --output text)

if [ -z "$LAMBDA_ARN" ]; then
    echo "Error: Lambda function '$LAMBDA_FUNCTION_NAME' not found."
    exit 1
else
    echo "Lambda function ARN: $LAMBDA_ARN"
fi

aws apigateway put-integration --rest-api-id $API_ID --resource-id $ROOT_RESOURCE_ID --http-method $METHOD --type AWS_PROXY --integration-http-method POST --uri arn:aws:apigateway:$REGION:lambda:path/2015-03-31/functions/$LAMBDA_ARN/invocations --output json >/dev/null

# Give API Gateway permission to invoke the Lambda function
echo "Adding permission for API Gateway to invoke Lambda function..."
EXISTING_PERMISSION=$(aws lambda get-policy --function-name $LAMBDA_FUNCTION_NAME --query 'Policy' --output text | grep "apigateway-invoke-post")

if [ -z "$EXISTING_PERMISSION" ]; then
    echo "Permission with StatementId "apigateway-invoke-post" does not exist. Adding permission..."
    aws lambda add-permission --function-name $LAMBDA_FUNCTION_NAME --statement-id "apigateway-invoke-post" --action "lambda:InvokeFunction" --principal apigateway.amazonaws.com --source-arn "arn:aws:execute-api:$REGION:$ACCOUNT_ID:$API_ID/*/$METHOD/" >/dev/null
else
    echo "Permission with StatementId "apigateway-invoke-post" already exists. Skipping permission addition."
fi

# Deploy the API to the specified stage
echo "Deploying the API to stage '$STAGE_NAME'..."
aws apigateway create-deployment --rest-api-id $API_ID --stage-name $STAGE_NAME --output json

echo "API Gateway deployment completed."
echo "To delete the API Gateway, run: aws apigateway delete-rest-api --rest-api-id $API_ID"
echo "API POST URL: https://$API_ID.execute-api.$REGION.amazonaws.com/$STAGE_NAME/"
